@model ChannakyaBase.DAL.DatabaseModel.PolicyIntCalc
@using ChannakyaBase.BLL.Service

@using(Ajax.BeginForm("_InterestPolicyCreate", "TransactionSetup", new AjaxOptions
{
    UpdateTargetId = "InterestPolicy-List",
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "Post",
    OnSuccess = "InterestPolicySuccess"
    //OnFailure = "errMessage"

}, new { id = "InterestPolicyFormCreate" }))
{ 
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>Interest Policy Mapping</legend>

        <div class="form-horizontal">
           @Html.HiddenFor(x => x.PSID)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Interest Policy", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PSName, new { htmlAttributes = new {autofocus = "autofocus", @class = "form-control focusdiv" ,@onkeyup="AllowAlphabet(this)"@*,required="required"*@ } })
                    @Html.ValidationMessageFor(model => model.PSName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Interest Rate", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.RID, TransactionUtilityService.InterestRate(), htmlAttributes: new { @class = "form-control"@*, required = "required"*@ })
                    @Html.ValidationMessageFor(model => model.RID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Interest On Balance", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.BALID, TransactionUtilityService.InterestOnBal(), htmlAttributes: new { @class = "form-control"@*, required = "required"*@ })
                    @Html.ValidationMessageFor(model => model.BALID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Interest In", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DURID, TransactionUtilityService.InterestIn(), htmlAttributes: new { @class = "form-control"@*, required = "required"*@ })
                    @Html.ValidationMessageFor(model => model.DURID, "", new { @class = "text-danger" })
                </div>
            </div>
            </div>@if (Model.PSID == 0)
            {
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Save" id="btn-saveInterestPolicy-submit" class="btn btn-default btn-save " />
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Save Changes" id="btn-saveInterestPolicy-submit" class="btn btn-default btn-save " />
                        <input type="button" value="Cancel" id="btn-cancel-saveInterestPolicy" class="btn btn-default btn-cancel" />
                    </div>
                </div>
            }
    </fieldset>
}
      
