@model ChannakyaBase.DAL.DatabaseModel.PolicyPenCalc
@using ChannakyaBase.BLL.Service
@using (Ajax.BeginForm("_PenaltyPolicyCreate", "TransationSetup", new AjaxOptions
{
    UpdateTargetId = "PenaltyPolicy-List",
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "Post",
    OnSuccess = "PenaltyPolicySuccess"
    //OnFailure = "errMessage"

}, new { id = "PenaltyPolicyFormCreate" }))
{
    <fieldset>
        <legend>Penalty Policy Mapping</legend>
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
        
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x=>x.PCID)
            <div class="form-group">
                @Html.Label("Penalty Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PCNAME, new { htmlAttributes = new { autofocus = "autofocus", @class = "form-control focusdiv" } })
                    @Html.ValidationMessageFor(model => model.PCNAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Penalty Rate", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.RID, TransactionUtilityService.InterestRate(), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Penalty On Balance", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PBALID, TransactionUtilityService.PenaltyOnBal(), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PBALID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Penalty In", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DURID, TransactionUtilityService.InterestIn(), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DURID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>@if (Model.PCID == 0)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Save" id="btn-savePenaltyPolicy-submit" class="btn btn-default btn-save " />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Save Changes" id="btn-savePenaltyPolicy-submit" class="btn btn-default btn-save " />
                    <input type="button" value="Cancel" id="btn-cancel-savePenaltyPolicy" class="btn btn-default btn-cancel" />
                </div>
            </div>
        }
    </fieldset>
}


