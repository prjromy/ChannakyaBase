@model ChannakyaAccounting.Models.ViewModel.TaskViewModel
@using ChannakyaAccounting.Service.TaskVerificationAcc

@{
    var aba = Model;
    ViewBag.Title = "EmployeeList";
    int eventValue = ViewBag.EventValue;
    ChannakyaAccounting.Service.Voucher1.Voucher1Service _voucher1Service = new ChannakyaAccounting.Service.Voucher1.Voucher1Service();
    //int eventvalue = Convert.ToInt32(Model.EventValue);
}

<div class="modal-dialog modal-lg verifier-modal">
    <div class="modal-content">
        <div class="modal-header">
            <span class="close" id="closeTop" data-dismiss="modal" aria-hidden="true">&times;</span>
            <h4 class="modal-title">
                @if (Model != null)
                {
                    <span>@TaskAccUtilityService.GetTaskNameByEventId(Model.EventId)</span>
                }

            </h4>
        </div>

        <div class="modal-body verify-voucher">
            <div class="content-box">
                <fieldset>
                    @if (Model == null)
                    {
                        if (ViewBag.ApprovedOn == null)
                        {
                             <legend style="font-size:large;font-weight:bold">UnVerified Voucher</legend>
                        }
                        else
                        {
                            <legend style="font-size:large;font-weight:bold">Verified Voucher</legend>

                        }

                        { Html.RenderAction("DisplayVoucherVerifyDetails", "Voucher1", new { V1Id = Convert.ToInt32(eventValue) }); }
                        @Html.Partial("_EventRaisedDetails", new ChannakyaAccounting.Models.ViewModel.TaskViewModel { UserName = _voucher1Service.GetUserName((int)ViewBag.PostedBy), RaisedOn = ViewBag.PostedOn, Message = "" })
                    }
                    else
                    {
                        <legend style="font-size:large;font-weight:bold">Task Related Details</legend>
                        { Html.RenderAction("DisplayVoucherVerifyDetails", "Voucher1", new { V1Id = Convert.ToInt32(Model.EventValue) }); }
                        @Html.Partial("_EventRaisedDetails", Model)
                    }
                </fieldset>
            </div>
        </div>






        <div class="btn-groups modal-footer" style="padding:5px">

            @if (Model != null && Model.IsVerified == true)
            {
                <span>Verified By:@TaskAccUtilityService.VerifiedBy(Model.Task1Id)</span>
            }
            else
            {
                if (Model != null)
                {
                    <button type="button" class="btn btn-success btn-sm btn-account-verifier-confirm" data-valofevent=@Convert.ToInt32(Model.EventValue) data-eventid=@Model.EventId data-taskId=@Model.Task1Id>Verify <i class="fa fa-check" aria-hidden="true"></i></button>
                }


                else if (ViewBag.ApprovedBy != null)
                {
                    <span>Verified By:@_voucher1Service.GetUserName((int)ViewBag.ApprovedBy)</span>
                    <span>Verified On:@ViewBag.ApprovedOn</span>
                }
            }




        </div>
    </div>
</div>



<script type="text/javascript">


    $(".verifier-modal").on("click", ".btn-account-verifier-confirm", function () {


        var eventValue = $(this).data("valofevent");
        var eventId = $(this).data("eventid");

        @*var task1Id = '@Model.Task1Id'*@

        //$(this).data("taskId");
        var url = "/TaskVerification/VerificationConfirm";
        $.ajax(
        {
            type: "Post",
            url: url,
            data: { eventValue: eventValue, eventId: eventId, task1Id: task1Id },
            success: function (returnMessage) {

                SuccessAlert("Voucher Sucessfully Verified", 5000);
                $('div#getTaskVerficationLists').modal('hide');

                var urlToDirect = "/TaskVerification/_ViewAllPendingTaskIndex";
                $.ajax({
                    type: "GET",
                    url: urlToDirect,
                    success: function (result) {
                        debugger;
                        $('.content').html("");
                        $('.content').html(result);

                    },
                    error: function () {

                    }
                });


            },

        })
    })

</script>