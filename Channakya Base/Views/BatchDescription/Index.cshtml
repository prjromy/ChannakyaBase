@model IEnumerable<ChannakyaAccounting.Models.Models.BatchDescription>
@*<script src="~/Scripts/ch-treeview.js"></script>*@
@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "BatchDescription Setup";
    var test = Model;
}


@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title"> @ViewBag.Title </h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div><!-- /.box-header -->

    <div class="box-body">
        <div id="explorer" class="BatchDescription-explore section-treeview ">
            @Html.Hidden("viewType", 1)

            <div id="explore-details" class="col-md-12 explore-details">
                <div class="panel-create " id="create">

                </div>
                <div class="panel-list" id="list">
                    @{Html.RenderPartial("_Details", Model);}
                </div>
            </div>



        </div><!-- /.box-body -->
    </div><!-- /.box -->
</div>

<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        var test = $("input.btn.btn-box-tool.txtSearch");
        $("input.btn.btn-box-tool.txtSearch").focus();

    });
    $('.BatchDescription-explore').on('click', '.listView', function (event) {
        debugger;

        var viewId = $(this).closest('.BatchDescription-explore').find('#viewType')
        if (viewId.val() == 1) {
            viewId.val(2)
        }
        else {
            viewId.val(1)
        }
        var nodeId = $(this).closest('.panel-list').find('input#pBatchDescriptionId').val();
        if (nodeId == "") {
            nodeId = 0;
        }
        $('.panel-list').trigger('nodeClick', [{ nodeId: nodeId }]);

    });

    $('.panel-list').on('nodeClick', function (e, data) {
        debugger;
        e.stopPropagation();

        var container = $(this).closest('.BatchDescription-explore').find('.panel-list');
        var listType = $(this).closest('.BatchDescription-explore').find('#viewType').val();
        $.ajax({
            type: "get",
            url: '@Url.Action("_Details", "BatchDescription")',
            contentType: "application/json; charset=utf-8",
            data: { ViewType: listType },
            dataType: "html",
            success: function (html) {
                debugger;
                $(container).html(html);
            },
            error: function () {
                alert("errorwwwwwwwwww");
            }
        });
    });



    $('.BatchDescription-explore').on('click', "#btn-back", function (e) {

        $(this).closest('.BatchDescription-explore').find('.BatchDescription-treeview').moveUp();
        //$(this).closest('.BatchDescription-explore').find('.BatchDescription-treeview').updateTreeview("BatchDescription", "_UpdateBatchDescriptionTree", 1009,-1)
    });

    $('.BatchDescription-explore').on('click', ".btndrill , .listDrill", function (e) {
        var id = $(this).attr("id");
        $(this).closest('.BatchDescription-explore').find('.BatchDescription-treeview').SelectNode(id);
    });


    $('.BatchDescription-explore').on('click', '.VoucherNameImage, .editList, .btn-create-BatchDescriptions', function (e) {
        debugger;
        e.stopPropagation();
        var container = $(this).closest('.BatchDescription-explore').find('.panel-create');
        //----------Select active element and Id--------------------------------------------//
        //var activeElement = $(this).closest('.BatchDescription-explore').find('.treeview-selected').text().trim();
        //var activeId = $(this).closest('.BatchDescription-explore').find('.treeview-selected').attr('nodeid');
        var BatchDescriptionId = 0;
        if ($(this).attr('class') == 'VoucherNameImage' || 'editList') {
            BatchDescriptionId = $(this).attr('id');
        }
        //var pBatchDescriptionId = $('#pBatchDescriptionId').val()
        //if (pBatchDescriptionId == "") {
        //    pBatchDescriptionId = 0;
        //}
        //-------------------------------------------------------------------------------------//
        $.ajax({
            type: "get",
            url: '@Url.Action("Create", "BatchDescription")',
            data: { BatchDescriptionId: BatchDescriptionId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (html) {
                $(container).html(html);
                $(container).removeData("validator");
                $(container).removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse($(container));


            },
            error: function () {
                alert("error");
            }
        });
    });

    $('.BatchDescription-explore').on('click', '.deleteNode', function (e) {
        debugger;
        var BatchDescriptionId = $(this).attr('id');
        var nodeId = $(this).closest('.panel-list').find('input#pBatchDescriptionId').val()
        $.ajax({
            type: "get",
            url: '@Url.Action("Delete", "BatchDescription")',
            data: { id: BatchDescriptionId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (deleteConfirm) {

                debugger;
                if (deleteConfirm == 'true') {
                    debugger;
                    $.MessageBox({
                        buttonDone: "Yes",
                        buttonFail: "No",
                        message: "Are you sure you want to Delete?"
                    }).done(function () {

                        deleteBatchDescription(BatchDescriptionId, nodeId);
                    })
                }
                else {
                    ErrorAlert("Please delete data linked in Voucher First", 5000);
                }

            },
            // $(container).html(html);

            error: function () {
                alert("error");
            }
        });


    });
    function deleteBatchDescription(BatchDescriptionId, nodeId) {
        debugger;

        $.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteConfirm", "BatchDescription")',
            data: { BatchDescriptionId: BatchDescriptionId },
            success: function () {
                SuccessAlert("BatchDescription Sucessfully Deleted", 5000)
                $('.panel-list').trigger('nodeClick', [{ nodeId: nodeId }]);
            },
            error: function () {
                alert("error");
            }
        });
    }


    $('.ch-treeview').on('filterTree', function (e, data) {
        debugger;
        //string filterString, bool allowSelectGroup, bool withCheckBox, bool withImageIcon
        e.stopPropagation();
        var TreeViewParam = {
            Controller: '',
            Action: '',
            WithCheckBox: data.withCheckBox,
            AllowSelectGroup: data.allowSelectGroupNode,
            WithImageIcon: data.withImageIcon,
            WithOutMe: 0,// data.withOutMe,
            Title: data.Title,
            SelectedNodeId: 0,
            Filter: data.param.Filter,
            SelectedNodeText: ''
        }

        var url = "/BatchDescription/_GetBatchDescriptionTree"
        var container = $(this).closest('.BatchDescription-explore').find('.treeview-area');

        $(container).load(url, { param: TreeViewParam });

    });
    function delay(callback, ms) {
        var timer = 0;
        return function () {
            var context = this, args = arguments;
            clearTimeout(timer);
            timer = setTimeout(function () {
                callback.apply(context, args);
            }, ms || 0);
        };
    }
    $('.panel-list').on('keyup', ".txtSearch", delay(function (e) {
        debugger;
        var query = $('input.txtSearch').val();
        var listType = $(this).closest('.BatchDescription-explore').find('#viewType').val();
        var container = $(this).closest('.BatchDescription-explore').find('.panel-list');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("_Details", "BatchDescription")',
            data: { ViewType: listType, query: query },
            success: function (data) {
                debugger;
                $(container).html(data);
                var test = $("input.btn.btn-box-tool.txtSearch");
                $("input.btn.btn-box-tool.txtSearch").focus();
                var val = test.val(); //store the value of the element
                test.val(''); //clear the value of the element
                test.val(val); //set that value back.

            },
            error: function () {
                alert("error");
            }
        });
    }, 500));




    //$(document).ready(function () {
    //    $.fn.pagination(1, 0, 0)

    //    $('.pagination').on('click', '.pagerClass', function () {
    //        debugger;
    //        var pagingData = $(this).attr('id');
    //        $.fn.pagination(pagingData, 0, 0);

    //    });

    //    $('.pagination').on('click', 'li.next , li.previous', function () {
    //        debugger;
    //        var cls = $(this).attr('class');
    //        if ($(this).attr('class') == 'next') {
    //            var pager = $('ul.pagination.BatchDescriptionpaginatoin').find('.active').attr('id');
    //            var finalId = parseInt(pager) + 1;
    //            var hasNext = $('ul.pagination.BatchDescriptionpaginatoin').find('li#' + finalId)
    //            if ($(hasNext).length > 0) {
    //                $.fn.pagination(finalId, 0, 0)
    //            }
    //        }
    //        else {
    //            var pager = $('ul.pagination.BatchDescriptionpaginatoin').find('.active').attr('id');
    //            var finalId = parseInt(pager) - 1;
    //            var hasPrev = $('ul.pagination.BatchDescriptionpaginatoin').find('li#' + finalId)
    //            if ($(hasPrev).length > 0) {
    //                $.fn.pagination(finalId, 0, 0)
    //            }
    //        }

    //    });
    //});

    //$.fn.pagination = function (pagerId, next, previous) {
    //    debugger;
    //    var checkActive = $('ul.pagination.BatchDescriptionpaginatoin').find('li').hasClass('active');
    //    if (checkActive == true) {
    //        $('ul.pagination.BatchDescriptionpaginatoin').find('.active').removeClass('active');
    //    }
    //    else {
    //        var listcount = 0;
    //        $('.detailsList').each(function (index, item) {
    //            listcount++;
    //        });
    //        var i;
    //        var mod = listcount / 10;
    //        for (i = 1; i <= mod + 1; i++) {
    //            debugger;
    //            $('ul.pagination.BatchDescriptionpaginatoin').append('<li id=' + i + ' class="pagerClass"><a>' + i + '</a> </li>')
    //        }
    //    }
    //    $('ul.pagination.BatchDescriptionpaginatoin').find('li#' + pagerId).addClass('active');
    //    var pagerRange = 10;
    //    var paginatonData = pagerId * pagerRange;
    //    $('.detailsList').each(function (index, item) {
    //        debugger;
    //        if (paginatonData > pagerRange) {
    //            var checkPagination = paginatonData - pagerRange;
    //            if (index <= paginatonData && index > checkPagination) {
    //                var text = $(item).find('.inner').attr('BatchDescription-caption').toUpperCase();
    //                $(item).css('display', 'table-row');
    //            }
    //            else {
    //                var text = $(item).find('.inner').attr('BatchDescription-caption').toUpperCase();
    //                $(item).css('display', 'none');
    //            }
    //        }
    //        else {
    //            if (index <= paginatonData) {
    //                var text = $(item).find('.inner').attr('BatchDescription-caption').toUpperCase();
    //                $(item).css('display', 'table-row');
    //            }
    //            else {
    //                var text = $(item).find('.inner').attr('BatchDescription-caption').toUpperCase();
    //                $(item).css('display', 'none');
    //            }
    //        }

    //    });
    //};





</script>
