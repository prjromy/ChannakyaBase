@model Tuple<ChannakyaBase.DAL.DatabaseModel.Location, ChannakyaBase.DAL.DatabaseModel.LocationMaster>
@{
    int? currentId = ViewBag.currentId;
    int? parentId = ViewBag.parentId;
    int? currentLevel = ViewBag.currentLevel;
    int? maxLevel = ViewBag.maxLevel;
    int result = ViewBag.result;
    string locationName = ViewBag.currentLocationName;
}

<style>
    .display-none {
        display: none;
    }

    .display-inline {
        display: inline;
    }
</style>

@Html.HiddenFor(tuple => @parentId)

@Html.HiddenFor(tuple => @result)

@Html.HiddenFor(tuple => @currentId)

@Html.HiddenFor(tuple => @maxLevel)

@Html.HiddenFor(tuple => @locationName)

@using (Ajax.BeginForm(null, null, new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    OnSuccess = "editSuccess"
}, new { id = "location-edit-form" }))
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3 class="modal-title">Edit Location</h3>
    </div>

    <div class="modal-body form-horizontal location-form-body">
        <div class="form-group">
            <text class="control-label col-md-4"><b>Current Location :</b></text>

            <div class="col-md-5" style="padding-top: 7px;">
                <text class="control-label"><b>@locationName</b></text>
            </div>
        </div> 
        
        @Html.HiddenFor(tuple => tuple.Item1.LId, new { @Value = currentId })
        @Html.HiddenFor(tuple => tuple.Item2.LId, new { @Value = currentId })
        @Html.HiddenFor(tuple => tuple.Item1.Lvl, new { @Value = currentLevel })
        @Html.HiddenFor(tuple => tuple.Item1.PLId, new { @Value = parentId })
        @Html.HiddenFor(tuple => tuple.Item2.MaxLvl, new { @Value = maxLevel })


        <div class="form-group">
            <text class="control-label col-md-4"><b>Location Name :</b></text>

            <div class="col-md-5" style="padding-top:7px;">
                @Html.EditorFor(tuple => tuple.Item1.LocationName, new { htmlAttributes = new { @class = "form-control location-name" } })
            </div>
        </div>

        @if (currentLevel == 1)
                {
            <div class="form-group">
                <text class="control-label col-md-4"><b>Max Level :</b></text>

                <div class="col-md-5" style="padding-top:7px;">
                    @Html.EditorFor(tuple => tuple.Item2.MaxLvl, new { htmlAttributes = new { @class = "form-control location-max-level" } })
                </div>
                <div class="col-md-3" style="padding-top:7px;">
                    <button type="button" class="btn btn-default display-none edit-location-button">Edit</button>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="error-message col-md-offset-2">

            </div>
        </div>

        @Html.HiddenFor(tuple => tuple.Item1.Lvl, new { @class = "hiddenLvl" })

        @if (currentLevel != 1)
               {
            @Html.HiddenFor(tuple => tuple.Item1.PLId, new { @class = "hiddenPLId" })
        }
        else
        {
            @Html.HiddenFor(tuple => tuple.Item1.PLId, new { @Value = 0 })
        }

        <div class="form-group">
            <div class="col-md-offset-4 col-md-6 location-level-fix">

            </div>
        </div>
        <div class="form-group">
            <div id="edit-result" class="col-md-offset-2">

            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="submit" class="btn btn-default submit-location-edit" disabled>Save</button>
        <button type="button" class="btn btn-default btn-cancel">Cancel</button>       
        <input type="button" value ="Done" class="btn btn-default btnEditDone" style="display:none" />
    </div>

}
