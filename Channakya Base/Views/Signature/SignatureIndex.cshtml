
@model ChannakyaBase.Model.ViewModel.ShareSignatureViewModel

@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "SignatureIndex";
}


<div class="box box-success signatureBox">
    <div class="box-header with-border">
        <h3 class="box-title">Import Signature</h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div>
    <div class="container" style="margin-top:10px;">
        <div class="col-md-12">
            <div class="row">

                <div class="col-md-4">
                    <label class="container">Account Signature @Html.RadioButton("Import", "AccountSignature", true, new { @onclick = "loadPartial('/Signature/AccountSignature')" })<span class="checkmark"></span></label>
                </div>
                <div class="col-md-4">
                    <label class="container">  Member Photo @Html.RadioButton("Import", "MemberPhoto", new { @onclick = "loadPartial('/Signature/CustomerPhoto')" })<span class="checkmark"></span></label>
                </div>
                <div class="col-md-4">
                    <label class="container">
                        Share Signature  @Html.RadioButton("Import", "ShareSignature", new { @onclick = "loadPartial('/Signature/ShareSignatureViewModel')" }) <span class="checkmark"></span>
                    </label>
                </div>

            </div>
        </div>
    </div>

    <div class="import-signature">

        @{Html.RenderAction("AccountSignature", "Signature");}

    </div>
</div>

<script>


    function loadPartial(url) {

        var container = $(".signatureBox").find('.import-signature');

        $.get(url, function (response) {



            //Dropzone.autoDiscover = false;
            //$("div#dropzone-form").dropzone({ url:url });

            $(container).html(response);
        });



    }



</script>


@*<script>

        function loadPartial(url) {
            debugger;
            var container = $(".signatureBox").find('.import-signature');

            $.get(url, function (data) {
                debugger;
                $(container).html(data);
            });



        }

        function showpreview(input) {
            debugger;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imgpreview').css('visibility', 'visible');
                    //$('#imgpreview').removeAttr('width')
                    //$('#imgpreview').removeAttr('height');
                    $('#imgpreview').attr('src', e.target.result);
                    $('#imgpreview').fadeIn(650);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>*@

<style>
    .image-live-preview {
        position: absolute;
    }

    #imgpreview {
        position: relative;
        -webkit-transition: all 200ms ease-in;
        -webkit-transform: scale(1);
        -ms-transition: all 200ms ease-in;
        -ms-transform: scale(1);
        -moz-transition: all 200ms ease-in;
        -moz-transform: scale(1);
        transition: all 200ms ease-in;
        transform: scale(1);
    }

        #imgpreview:hover {
            z-index: 2;
            -webkit-transition: all 200ms ease-in;
            -webkit-transform: scale(1.5);
            -ms-transition: all 200ms ease-in;
            -ms-transform: scale(1.5);
            -moz-transition: all 200ms ease-in;
            -moz-transform: scale(1.5);
            transition: all 200ms ease-in;
            transform: scale(1.5);
        }



    .container {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size:14px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;

    }

        /* Hide the browser's default radio button */
        .container input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom radio button */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
        border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    .container:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .container input:checked ~ .checkmark {
        background-color: teal;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .container input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the indicator (dot/circle) */
    .container .checkmark:after {
        top: 9px;
        left: 9px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }
</style>







































