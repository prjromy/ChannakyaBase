@model ChannakyaBase.Model.ViewModel.AWtdQueueModel
@using ChannakyaBase.BLL
@using ChannakyaBase.BLL.Service
@using ChannakyaBase.BLL.CustomHelper;
@{
    CommonService commonServices = new CommonService();

}
<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title">Teller Exceed Payment</h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div>
    <div class="box box-body">
        @using (Html.BeginForm("UserLimitExceedDetailsVeryfyAfterByCashier", "Teller", FormMethod.Post, new { id = "user-limit-exceed-transaction-form" }))
        {
            <div class="col-md-12">
                <div class="content-box">
                    <fieldset>
                        <legend style="font-size:large;font-weight:bold">
                            <span>  Teller Limit Exceed Payment</span>
                        </legend>
                        <div class="limitamount">
                            @Html.HiddenFor(x => x.amount)
                        </div>

                        @Html.HiddenFor(x => x.EventId)
                        @Html.HiddenFor(x => x.TaskId)
                        @Html.HiddenFor(x => x.Rno)
                        <div class="col-md-6">
                            <div class="box-body table-responsive no-padding">
                                <table class="table table-striped table-bordered table-responsive">
                                    <tbody>

                                        <tr>
                                            <th>Account Number</th>
                                            <td><span class="form-control">@Model.AccountNumber</span></td>
                                        </tr>
                                        <tr>
                                            <th>Account Name</th>
                                            <td><span class="form-control">@Model.AccountName</span></td>
                                        </tr>
                                        <tr>
                                            @if (Model.isslip == true)
                                            {
                                                <th>Slip No.</th>
                                            }
                                            else
                                            {
                                                <th>Cheque No</th>
                                            }

                                            <td><span class="form-control">@Model.chqno</span></td>
                                        </tr>
                                        <tr>
                                            <th>Transaction Date</th>
                                            <td>  <span class="form-control">@commonServices.GetDate(Model.tdate)</span></td>
                                        </tr>
                                        <tr>
                                            <th>Payee </th>
                                            <td> <span class="form-control">@Model.notes</span></td>
                                        </tr>
                                        <tr>
                                            <th>Amount</th>
                                            <td> <span class="form-control">@Model.amount.ToString("0,0.00", System.Globalization.CultureInfo.InvariantCulture)</span></td>
                                        </tr>


                                    </tbody>

                                </table>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @if (commonServices.IsTransactionWithDeno())
                {
                                <div class="form-group">
                                    <div class="transaction-with-deno">

                                        @{Html.RenderAction("DenoTransaction", "Teller", new { currencyId = Model.currid, denoInOut = EDeno.DenoOut.GetDescription() });}
                                    </div>
                                </div>
                                            }
                        </div>

                    </fieldset>
                </div>
            </div>
            <div class="box-footer">
                <div class="form-group">
                    <div class="col-md-offset-10">
                        @if (Model.VerifyBy == "")
                {
                            <button type="button" class="btn btn-success btn-sm btn-user-limit-exceed">Save <i class="fa fa-check" aria-hidden="true"></i></button>
                        }
                        else
                        {
                            <span>Transaction completed by @Model.VerifyBy</span>
                        }
                        @if (ViewBag.buttonShow != "controlAction")
                        {
                            <button type="button" class="btn btn-danger btn-sm btn-account-verifier-close" data-dismiss="modal">Close <i class="fa fa-times" aria-hidden="true"></i></button>
                        }
                        
                    </div>
                </div>
            </div>

        }
    </div>
</div>

<script>
    $(".btn-user-limit-exceed").on("click", function (e) {
        debugger;
      var balanceDiv = $(this).parents().find("#dataTransaction")
        var strictVerifiable = $('.Depost-transaction-create').find('#strictlyverifiable').prop('checked');
        eventid = $(this).data('eventid');
        ismultiVerify = $(this).attr('isMultiVerifier');

        $('#user-limit-exceed-transaction-form').removeData("validator").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse($('#user-limit-exceed-transaction-form'));
        if ($("#user-limit-exceed-transaction-form").valid()) {

            var IsDenoTransaction = '@commonServices.IsTransactionWithDeno()';
            if (IsDenoTransaction == 'True') {

                var depositAmount = $('.limitamount').find("#amount").val();
                var balanceInDeno = $('.balance-deno-div').find("#Balance").val();
              var balanceDiv = $('.transaction-with-deno').find('.balance-deno-div').find('.deno-inout-balance')
                if (parseFloat(depositAmount).toFixed(2) != parseFloat(Math.abs(balanceInDeno))) {
                    $.MessageBox({
                        buttonDone: "OK",
                        message: "withdraw amount is not match with deno balance!!"
                    }).done(function () {
                        $(balanceDiv).find("#Balance").focus();
                        return false;
                    }).fail(function () {
                        //return false;
                    })
                    return;
                }

            }
            $.MessageBox({
                buttonDone: "Yes",
                buttonFail: "No",
                message: "Are you sure?"
            }).done(function () {
                debugger;
                $('#user-limit-exceed-transaction-form').ajaxSubmit({
                    beforeSubmit: function () {
                    },
                    success: function (result) {
                        debugger;
                        if (result.Success) {

                            SuccessAlert(result.Msg,5000);
                            document.getElementById('alert-success').scrollIntoView();

                        } else {

                            ErrorAlert(result.Msg,10000);
                            document.getElementById('alert-error').scrollIntoView();
                        }
                    },
                    error: function () {
                        ErrorAlert(data.responseText, 15000)
                    }
                });
            }).fail(function () {

            });


        }
    })
</script>
