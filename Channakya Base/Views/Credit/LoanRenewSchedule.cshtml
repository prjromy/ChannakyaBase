@model ChannakyaBase.Model.ViewModel.ScheduleModel
@using ChannakyaBase.BLL.Service
@using ChannakyaBase.BLL.CustomHelper
@using ChannakyaCustomeDatePicker.Helper;

@{ 
    var models = Model;
}
<div class="form-horizontal">
    <fieldset>
        <div class="form-group">
            @Html.HiddenFor(x => x.LoanAccountId)
            @Html.LabelFor(model => model.IsReschedule, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.CheckBoxFor(x => x.IsReschedule)
            </div>
            @Html.LabelFor(model => model.IsRestructure, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.CheckBoxFor(x => x.IsRestructure)
            </div>
        </div>
    </fieldset>
    <fieldset class="first-details">
        <div class="form-group">

            @Html.LabelFor(model => model.ValueDate, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DatePicker(x => x.ValueDate, true)
            </div>
            <div class="hidden">
                @Html.LabelFor(model => model.Revolving, new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    @Html.CheckBoxFor(x => x.Revolving)
                </div>
                @Html.LabelFor(model => model.Flat, new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    @Html.CheckBoxFor(x => x.Flat)
                </div>
            </div>
        </div>

    </fieldset>
    <fieldset class="seccond-details">
        <div class="form-group">
            @Html.LabelFor(model => model.ScheduleType, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.ScheduleType, CreditUtilityService.GetAllRulePaySchedule(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ScheduleType, "", new { @class = "text-danger" })
            </div>
            <div class="day-custome">
                @Html.LabelFor(model => model.Day, new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Day, new { @class = "form-control",@readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset class="third-details">
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "control-label  col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control",@readonly= "readonly" })

            </div>
            @Html.LabelFor(model => model.Duration, new { @class = "control-label  col-md-1" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Duration, new { @class = "form-control", @readonly = "readonly" })
            </div>
            @Html.LabelFor(model => model.Rate, new { @class = "control-label  col-md-1" })
            <div class="col-md-2">

                @Html.TextBoxFor(model => model.Rate, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
    </fieldset>
    <fieldset class="fourth-details">
        <div class="form-group">

@if (models.Revolving == true)
{
            @Html.LabelFor(model => model.PaymentMode, new { @class = "control-label  col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.PaymentMode, CreditUtilityService.PaymentModeList(), new { @class = "form-control principal-interest-payment-mode", @style = "pointer-events: none" })
            </div>
}
else {
                @Html.LabelFor(model => model.PaymentMode, new { @class = "control-label  col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.PaymentMode, CreditUtilityService.PaymentModeList(), new { @class = "form-control principal-interest-payment-mode" })
            </div>
}
         
            @if (models.Revolving == true)
            {
                @Html.LabelFor(model => model.PrincipalFrequency, new { @class = "control-label  col-md-2" })
                <div class="col-md-1">

                    @Html.TextBoxFor(model => model.PrincipalFrequency, new { @class = "form-control principal-frequency", @readonly = "readonly" })
                </div>

             
            }
            else
            {
                @Html.LabelFor(model => model.PrincipalFrequency, new { @class = "control-label  col-md-2" })
                <div class="col-md-1">

                    @Html.TextBoxFor(model => model.PrincipalFrequency, new { @class = "form-control principal-frequency" })
                </div>
            }


            @Html.LabelFor(model => model.InterestFrequency, new { @class = "control-label  col-md-2" })
            <div class="col-md-1">

                @Html.TextBoxFor(model => model.InterestFrequency, new { @class = "form-control interest-frequency"})
            </div>

        </div>
    </fieldset>
    <fieldset class="fifth-details">
        <div class="form-group">
            @Html.LabelFor(model => model.GraceOption, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.GraceOption, CreditUtilityService.GraceOption(), new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="grace-in-day-month">
                <div class="">
                    @Html.LabelFor(model => model.Principal, new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.TextBoxFor(model => model.Principal, new { @class = "form-control Principal-day", @readonly = "readonly" })
                    </div>
                </div>
                @Html.LabelFor(model => model.PrincipalDate, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DatePicker(x => x.PrincipalDate, true)
                </div>
            </div>

        </div>
        <div class="form-group grace-month-day-date">
            <div class="">
                @Html.LabelFor(model => model.Interest, new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Interest, new { @class = "form-control Interest-day", @readonly = "readonly" })
                </div>
            </div>
            @Html.LabelFor(model => model.InterestDate, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DatePicker(x => x.InterestDate, true)
            </div>
        </div>


    </fieldset>

    <div class="form-group">
        <div class="col-md-offset-10 col-md-12">
            <input type="button" value="Generate Schedule" class="btn btn-success btn-Preview-Trial-Schedule " />
        </div>
    </div>
</div>
<link href="~/Scripts/DatePicker/DatePicker.css" rel="stylesheet" />

@*<div id="Preview-trial-list"></div>*@

@*@Html.Partial("_LoanRenewSchedule", Model)*@
@*<div class="form-group">
    <div class="disbursement-schedule"></div>
    <div class="disbursement-schedule-final"></div>
    </div>*@
<script>
    $(function () {

        hideFunction()
    })
    function hideFunction() {
        $('.first-details').hide()
        $('.seccond-details').hide()
        $('.fourth-details').hide()
        $('.fifth-details').hide()
    }
    function showFunction() {
        $('.first-details').show()
        $('.seccond-details').show()
        $('.fourth-details').show()
        $('.fifth-details').show()
    }
    $("#IsReschedule").on("click", function () {
        debugger;
        if ($("#IsReschedule").is(":checked")) {
            if (!$("#IsRestructure").is(":checked")) {
                debugger;
                $("#Duration").prop("readonly", true)
                $("#Rate").prop("readonly", false)

                // hideFunction()
                /// $("#IsRestructure").removeAttr("checked")
            } else {
                debugger;
                $("#Duration").prop("readonly", true)
                $("#Rate").prop("readonly", false)
            }

        } else {
            debugger;
            if ($("#IsRestructure").is(":checked")) {
                $("#Duration").prop("readonly", false)
                $("#Rate").prop("readonly", false)
            }
            else {
                $("#Duration").prop("readonly", true)
                $("#Rate").prop("readonly", true)
            }
        }
    })




    $("#IsRestructure").on("click", function () {
        debugger
        if ($("#IsRestructure").is(":checked") ) {
            if (!$("#IsReschedule").is(":checked")) {
                debugger;
                $("#Duration").prop("readonly", false)
                $("#Rate").prop("readonly", false)
            } else {
                debugger;
                $("#Duration").prop("readonly", true)
                $("#Rate").prop("readonly", false)
            }
            
            
          //  $("#IsReschedule").removeAttr("checked")
            showFunction()
          

        } else {
            hideFunction()
            if ($("#IsReschedule").is(":checked")) {
                $("#Duration").prop("readonly", true)
                $("#Rate").prop("readonly", false)
            } else {
                $("#Duration").prop("readonly", true)
                $("#Rate").prop("readonly", true)
            }
      
        }
    })
    $('.btn-Preview-Trial-Schedule').on("click", function () {
        debugger;
        var PaymentMode = $("#PaymentMode").val();// $('.loan-disburse-details').find('#HasCustomisedSchedule').val();
        var IAccno = $(".account-id").val();
        var Rate = $("#Rate").val();
        var Duration = $("#Duration").val();
        var Amount = $("#Amount").val();
       
        var ScheduleType = $("#ScheduleType").val();
        var Day = $("#Day").val();
        var PrincipalFrequency = $("#PrincipalFrequency").val();
        var InterestFrequency = $("#InterestFrequency").val();
        var GraceOption = $("#GraceOption").val();
        var PrincipalDate = $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val();
        var InterestDate = $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val();
        var Principal = $("#Principal").val();
        var Interest = $("#Interest").val();
        var IsRestructure = $("#IsRestructure").is(":checked")
        var IsReschedule = $("#IsReschedule").is(":checked")
        

        $.ajax({
            type: 'get',
            url: '/credit/_LoanRenewSchedule',
            data: {
                PaymentMode: PaymentMode,
                IAccno: IAccno,
                Rate: Rate,
                Duration: Duration,
                Amount: Amount,               
                ScheduleType: ScheduleType,
                Day: Day,
                PrincipalFrequency: PrincipalFrequency,
                InterestFrequency: InterestFrequency,
                GraceOption: GraceOption,
                PrincipalDate: PrincipalDate,
                InterestDate: InterestDate,
                Principal: Principal,
                Interest: Interest,
                IsRestructure: IsRestructure,
                IsReschedule: IsReschedule,
               
            },
            contentType: 'application/json; charset=utf-8',
            dataType: "Json",
            success: function (data) {
                debugger

                if (PaymentMode == 3) {
                    $(".disbursement-schedule").html("")
                    $(".disbursement-schedule-final").html("")
                    $(".disbursement-schedule").html(data.htmlToShow);
                   
                }
                else {
                    $(".disbursement-schedule-final").html("")
                    $(".disbursement-schedule").html("")
                    $(".disbursement-schedule-final").html(data.htmlToShow);
                }

            }
        })




    })
    $('#Principal').on('change', function () {
        debugger;
        var interestDay = parseInt($(".Interest-day").val())
        var principalDay = parseInt($(this).val())
        if (principalDay < interestDay) {
            $.MessageBox({
                buttonDone: "OK",
                message: "Principal day cann't be less than interest day.!!! "
            }).done(function () {

            }).fail(function () {

            });
            $(this).focus()
            $(this).val(1)
            return
        }
        var graceOption = $('#GraceOption option:selected').val();
        var pinVal = $(this).val();
        var currentDate = $('#ValueDate').closest('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val();
        if (graceOption == 1) {
            pinVal = 0;
            $('#Principal').val(0);
        }
        if (graceOption != 4) {
            $.ajax({
                url: "/Credit/GetGraceDate",
                type: "Get",
                data: { graceOption: graceOption, dayMonth: pinVal, date: currentDate },
                dataType: "json",
                success: function (result) {
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val(result.Date);
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").val(result.EnglishDate)
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").val(result.NepaliDate)
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    ErrorAlert("An error has occured:\n" + xhr.status + "\n" + ajaxOptions + "\n" + thrownError, 5000);
                }
            })
        }
    })
    $('#Duration').on('change', function () {
        if ($('#Revolving').prop("checked")) {
            $('.principal-frequency').val($(this).val())
        }
    })
    $('#Interest').on('change', function () {
        debugger;
        var graceOption = $('#GraceOption option:selected').val();
        var principalDay = parseInt($("#Principal").val())
        var interestDay = parseInt($(".Interest-day").val())
        if (principalDay < interestDay) {
            $.MessageBox({
                buttonDone: "OK",
                message: "Principal day cann't be less than interest day.!!! "
            }).done(function () {
                $(this).focus()
                $(this).val(1)
            }).fail(function () {

            });

            return
        }
        var intVal = $(this).val();
        if (graceOption == 1) {
            intVal = 0;
            $('#Interest').val(0);
        }
        var currentDate = $('#ValueDate').closest('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val();
        if (graceOption != 4) {
            $.ajax({
                url: "/Credit/GetGraceDate",
                type: "Get",
                data: { graceOption: graceOption, dayMonth: intVal, date: currentDate },
                dataType: "json",
                success: function (result) {
                    $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val(result.Date);
                    $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").val(result.EnglishDate)
                    $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").val(result.NepaliDate)
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    ErrorAlert("An error has occured:\n" + xhr.status + "\n" + ajaxOptions + "\n" + thrownError, 5000);
                }
            })
        }
    })


    $('#ValueDate').on('change', function () {

        var englistDate = $(this).closest('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").val()
        var nepaliDate = $(this).closest('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").val()
        var date = $(this).closest('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val()

        var edate1 = $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD");
        var ndate2 = $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS")

        $(edate1).val(englistDate);
        $(ndate2).val(nepaliDate);
        $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val(date);
        var edate3 = $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD");
        var ndate4 = $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS");
        $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateValue").val(date);
        $(edate3).val(englistDate);
        $(ndate4).val(nepaliDate);
    })

    $("#Revolving").on("click", function () {

        if ($('#Revolving').prop("checked")) {
            var duration = $('#Duration').val();
            $('#PaymentMode').val(1);
            $('.principal-interest-payment-mode').css('pointer-events', 'none')
            $('.principal-frequency').val(duration)
            $('.principal-frequency').prop('readonly', true)
            $('.grace-in-day-month').prop('readonly', true)
            $('.interest-frequency').prop('readonly', false)

        } else {
            $('.principal-frequency').val(1)
            $('.principal-interest-payment-mode').css('pointer-events', 'auto')
            $('.principal-frequency').prop('readonly', false)

        }
        changeGraceDayOption()
    })
    $('#PrincipalFrequency').on('change', function () {
        debugger;
        var principalfreq = $(this).val();
        var duration = $('#Duration').val();
        var interestfreq = $('.interest-frequency').val();
        if (principalfreq == "" || principalfreq == "0") {
            $.MessageBox({
                buttonDone: "OK",

                message: "Principal frequency cann't be less than 1.!!! "
            }).done(function () {
                $(this).val(1)
            }).fail(function () {

            });

            return
        }
        var divideResult = parseFloat(duration) % parseFloat(principalfreq)

        if (divideResult != 0) {
            $.MessageBox({
                buttonDone: "OK",

                message: "Principal frequency must be factor of duration.!!! "
            }).done(function () {
                $('.principal-frequency').focus()
                $('.principal-frequency').val(1)
            }).fail(function () {

            });

            return
        }

        if (parseInt(principalfreq) < parseInt(interestfreq)) {
            $.MessageBox({
                buttonDone: "OK",
                message: "Principal frequency cann't be less than interest frequency.!!! "
            }).done(function () {
                $('.principal-frequency').focus()
                $('.principal-frequency').val(1)
            }).fail(function () {

            });

            return
        }
    })
    $('#InterestFrequency').on('change', function () {
        debugger;
        var duration = $('#Duration').val();
        var interestfrequency = $(this).val();
        var PaymentMode = $('#PaymentMode option:selected').val();

        if (interestfrequency == "" || interestfrequency == "0") {
            $.MessageBox({
                buttonDone: "OK",
                message: "Interest frequency cann't be less than 1.!!! "
            }).done(function () {
                //$(this).val(1)
                $(this).attr('value', 1);
                $(this).focus();
            }).fail(function () {

            });

            return
        }
        var principalfreq = $('.principal-frequency').val()

        var interestfreq = $('.interest-frequency').val();
        if (PaymentMode != 2) {
            if (parseInt(principalfreq) < parseInt(interestfreq)) {
                $.MessageBox({
                    buttonDone: "OK",
                    message: "Principal frequency cann't be less than interest frequency.!!! "
                }).done(function () {
                    $('.interest-frequency').focus()
                    $('.interest-frequency').val(1)
                }).fail(function () {

                });

                return
            }
        } else {
            $('.principal-frequency').val(interestfreq)
        }

        var divideIntResult = parseFloat(duration) % parseFloat(interestfreq)
        if (divideIntResult != 0) {
            $.MessageBox({
                buttonDone: "OK",

                message: "interest frequency must be factor of duration.!!! "
            }).done(function () {
                $('.interest-frequency').focus()
                $('.interest-frequency').val(1);
            }).fail(function () {

            });

            return
        }
    })

    $('#ScheduleType').on('change', function () {
        var value = $(this).val();
        if (value == 5 || value == 6) {
            $('#Day').prop('readonly', false)
        } else {
            $('#Day').prop('readonly', true)
            $('#Day').val(0);
        }
    })
    $('#PaymentMode').on('change', function () {
        var value = $(this).val();
        if (value == 1) {
            $('.principal-frequency').prop('readonly', false)
            $('.interest-frequency').prop('readonly', false)
        } else if (value == 2) {
            $('.principal-frequency').prop('readonly', true)
            $('.interest-frequency').prop('readonly', false)
        } else {
            $('.principal-frequency').prop('readonly', true)
            $('.interest-frequency').prop('readonly', true)
        }

    })


    function changeGraceDayOption() {

        var value = $('#GraceOption').val();
        if (value != 1) {

            $(".Principal-day").prop('readonly', false)
            $(".Interest-day").prop('readonly', false)

            if (value == 4) {

                $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").attr("readonlytag", "False")
                $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").prop('readonly', false)
                $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").prop('readonly', false)

                if ($('#Revolving').prop("checked")) {
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").attr("readonlytag", "True")
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").prop('readonly', true)
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").prop('readonly', true)
                } else {
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").attr("readonlytag", "False")
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").prop('readonly', false)
                    $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").prop('readonly', false)
                }
                $(".Principal-day").prop('readonly', true)
                $(".Interest-day").prop('readonly', true)

            } else {

                $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").attr("readonlytag", "True")
                $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").prop('readonly', true)
                $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").prop('readonly', true)

                $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").attr("readonlytag", "True")
                $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").prop('readonly', true)
                $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").prop('readonly', true)

                if ($('#Revolving').prop("checked")) {
                    $(".Principal-day").prop('readonly', true)
                } else {
                    $(".Principal-day").prop('readonly', false)
                }

                $(".Interest-day").prop('readonly', false)
            }

        }
        else {
            $(".Principal-day").prop('readonly', true)
            $(".Interest-day").prop('readonly', true)
            $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").attr("readonlytag", "True")
            $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").attr("readonlytag", "True")

            $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").prop('readonly', true)
            $('.grace-month-day-date').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").prop('readonly', true)

            $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateAD").prop('readonly', true)
            $('.grace-in-day-month').find('.chdPickerMain').find("#chdPickerId").find(".txtDateBS").prop('readonly', true)
        }
    }
    $('#GraceOption').on('change', function () {
        $('#Principal').trigger('change')
        $('#Interest').trigger('change')
        changeGraceDayOption()
        //if($(this).val()==1)
        //{
        //    $('#Principal').val(0);

        //    $('#ValueDate').change();
        //}
    })
</script>
