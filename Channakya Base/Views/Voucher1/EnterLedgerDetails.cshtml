

@model ChannakyaAccounting.Models.Models.Voucher2T

@{
    Layout = null;
    Nullable<Boolean> isDepositLoanOrShare = ViewData["DLSProduct"] as Nullable<Boolean>;
    ChannakyaAccounting.Service.Voucher1.Voucher1Service voucher1 = new ChannakyaAccounting.Service.Voucher1.Voucher1Service();
}
@*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@
<script src="~/Scripts/ChannakyaBaseJs/AccountNumberSearchAcc.js"></script>
<div class="modal fade" id="getSubsiDetailsList" data-width="400" tabindex="-1" role="dialog" aria-labelledby="myModal-label" aria-hidden="true" data-url='@Url.Action("GenerateSubsiTypeNameList", "Voucher1")'></div>
@if (Model.BankInfoList.Count() > 0 || Model.SubsiVSLedgerList.Count() > 0)
{
    using (Html.BeginForm("SaveVoucherDataTemporary", "Voucher1", FormMethod.Post, new { @id = "createVoucherRow" }))
    {
        <div class="modal-dialog add-details-finacc" style="width:100%;padding:0 5px 0 235px;top:20px; position:fixed;height:600px;">
            <div class="modal-content addvoucherDetails">
                <div class="modal-header">
                    <div class="input-group">
                    </div>
                    <span class="close" data-dismiss="modal" aria-hidden="true">&times;</span>
                    <h4 class="modal-title" id="myModal-label">Voucher Details</h4>
                </div>
                <div class="modal-body" style="padding:40px 50px; ">

                    @Html.HiddenFor(x => x.Fid, new { @class = "ledgerId" })

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.LedgerName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.LedgerName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.LedgerName, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    @*<div class="form-group col-md-12 dimension"style="border-radius: 8px;">
                            @if (Model.DimensionVSLedgerList != null)
                        {
                            if (Model.DimensionVSLedgerList.Count() > 0)
                            {
                                    @Html.Label("Dimension Entry", new { @class = "control-label col-md-12 myHeader" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(x => x.DimensionVSLedgerList)
                                    </div>
                                }
                            }
                        </div>*@

                    <div class="form-group col-md-12 subsi" style="border-radius: 8px;">
                        @if (Model.SubsiVSLedgerList != null)
                        {
                            if (Model.SubsiVSLedgerList.Count() > 0)
                            {
                                @Html.Label("Subsi Entry", new { @class = "control-label col-md-12 myHeader" })
                                <div class="col-md-12 subsi-voucher-list">
                                    @Html.Partial("_SubsiDetailsEntry", Model.SubsiVSLedgerList.First())
                                </div>
                            }


                        }

                        @*@if ((bool)isDepositLoanOrShare == true)
                            {
                                @Html.Label("Subsi Entry", new { @class = "control-label col-md-12 myHeader" })
                                <div class="col-md-12 subsi-voucher-list">
                                    @Html.Partial("_SubsiDetailsEntry", new ViewDataDictionary { { "isDepositLoanOrShare", isDepositLoanOrShare } })
                                </div>
                            }*@
                    </div>

                    <div class="form-group col-md-12 bank" style="border-radius: 8px;">
                        @if (Model.BankInfoList != null)
                    {
                        if (Model.BankInfoList.Count() > 0)
                        {
                                @Html.Label("Bank Details Entry", new { @class = "control-label col-md-12 myHeader" })
                                <br />
                                <br />
                                <div class="col-md-12 bank-voucher-list">
                                    @Html.EditorFor(x => x.BankInfoList)
                                </div>
                            }


                        }
                    </div>

                </div>



                <div class="modal-footer">
                    <input type="button" class="btn btn-success saveDataVoucher" value="OK" />
                    <button class="btn btn-default" data-dismiss="modal" id="btnCancel">Cancel</button>

                </div>

            </div>

        </div>
    }
}

else
{
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            $(voucherEvent).closest('tr.newrow').find('input#ledgerSearch').val("@Model.LedgerName");
            //var test1 = $(voucherEvent).closest('tr.newrow').find('input#ledgerID-voucher');
            $(voucherEvent).closest('tr.newrow').find('input#ledgerID-voucher').val("@Model.Fid");
            $('#getVoucherDetails').modal('hide');
        })

    </script>
}

<script type="text/javascript">

    $('.saveDataVoucher').click(function () {
        debugger;
        var form = $("#createVoucherRow");
        var currentevent = voucherEvent;

        var container = $('.Voucher1-create').find('.voucher2-container')
        var formData = new FormData($("#createVoucherRow")[0]);

        var chequeNo = new Array();
        $("input[id$='ChequeNo']").each(function (index) {
            chequeNo.push($(this).val());
        })
        var ChequeAmount = new Array();
        $("input[id$='ChequeAmount']").each(function (index) {
            ChequeAmount.push($(this).val());
        })
        var ChequeDate = new Array();
        $("input[id$='ChequeDate']").each(function (index) {
            ChequeDate.push($(this).val());
        })
        var Payees = new Array();
        $("input[id$='Payees']").each(function (index) {
            Payees.push($(this).val());
        })

        var BankInfo = new Array();
        var i;
        for (i = 0; i < chequeNo.length; ++i) {
            BankInfo.push({ ChequeNo: chequeNo[i], ChequeAmount: ChequeAmount[i], ChequeDate: ChequeDate[i], Payees: Payees[i] })
        }

        for (var i = 0; i < BankInfo.length; i++) {
            formData.append("BankInfo[" + i + "].ChequeNo", BankInfo[i].ChequeNo);
            formData.append("BankInfo[" + i + "].ChequeAmount", BankInfo[i].ChequeAmount);
            formData.append("BankInfo[" + i + "].ChequeDate", BankInfo[i].ChequeDate);
            formData.append("BankInfo[" + i + "].Payees", BankInfo[i].Payees);
        }

        $.ajax({
            url: '@Url.Action("AppendVoucherInTextBox", "Voucher1")',
            type: 'POST',
            data: formData,
            async: false,
            success: function (data) {
                debugger;
                var Fid = data.data.Fid;
                var Fname = data.data.Fname;
                var ledgerFullDescription = Fname;
                var modelData = data.data;

                var totalAmount = parseFloat(0);

                var isMultipleNode = false;
                if (data.data.BankInfoList.length > 0) {
                    isMultipleNode = true;
                    debugger;
                    var bankList = data.data.BankInfoList;
                    totalAmount = parseFloat(data.data.BankInfoList[0].ChequeAmount);

                }
                if (data.data.SubsiVSLedgerList.length > 0) {
                    isMultipleNode = true;
                    debugger;
                    var subsilist = data.data.SubsiVSLedgerList;
                    $.each(subsilist, function (index, item) {
                        totalAmount = parseFloat(totalAmount) + parseFloat(item.Amount);
                    });

                }


                var debitAmount = $(voucherEvent).closest('tr.newrow').find('input.dbamnt');

                var creditAmount = $(voucherEvent).closest('tr.newrow').find('input.cramnt');


                if ($(debitAmount).css('display') == 'none' && isMultipleNode == true) {
                    $(creditAmount).val(totalAmount);

                    $(creditAmount).prop('readonly', true);
                }
                if ($(creditAmount).css('display') == 'none' && isMultipleNode == true) {
                    $(debitAmount).val(totalAmount);
                    $(debitAmount).prop('readonly', true);
                }

                if (data.data.BankInfoList.length > 0) {
                    var date = data.data.BankInfoList[0].ChequeDate;
                    var parsedDate = new Date(parseInt(date.substr(6)));
                    var newDate = new Date(parsedDate);
                    var getMonth = newDate.getMonth() + 1;
                    var getDay = newDate.getDate();
                    var getYear = newDate.getFullYear();
                    standardDate = getMonth + '/' + getDay + '/' + getYear;
                    // data.data.BankInfoList[0].ChequeDate.val(standardDate);
                    data.data.BankInfoList[0].ChequeDate = standardDate;
                }

                var voucher2 = { DimensionVSLedgerList: data.data.DimensionVSLedgerList, SubsiVSLedgerList: data.data.SubsiVSLedgerList, BankInfoList: data.data.BankInfoList };

                $.ajax({
                    url: '@Url.Action("AddVoucherLedgerDetails", "Voucher1")',
                    type: 'POST',
                    async: false,
                    data: {
                        voucher2: voucher2
                    },
                    async: false,
                    success: function (data) {
                        debugger
                        $("td.voucher-ledger-details-container").html(data);
                    },
                    error: function (data) {
                        debugger;
                    }
                });


                //$("td.voucher-ledger-details-container").load("/Voucher1/AddVoucherLedgerDetails", { voucher2: voucher2 })

                var test = $(voucherEvent).closest('tr.newrow').find('input#ledgerSearch');
                $(voucherEvent).closest('tr.newrow').find('input#ledgerSearch').val(Fname);
                //var test1 = $(voucherEvent).closest('tr.newrow').find('input#ledgerID-voucher');
                $(voucherEvent).closest('tr.newrow').find('input#ledgerID-voucher').val(Fid);

                var descContainer = $(voucherEvent).closest('tr.newrow').find('#description-content');

                //$(descContainer).load("/Voucher1/AddTableRowReadOnly", { voucher2: voucher2 })

                $.ajax({
                    url: '@Url.Action("AddTableRowReadOnly", "Voucher1")',
                    type: 'POST',
                    async:false,
                    data: {
                        voucher2: voucher2
                    },
                    async: false,
                    success: function (data) {
                        debugger
                        $(descContainer).html(data);
                    },
                    error: function (data) {
                        debugger;
                    }
                })

                $('#getVoucherDetails').modal('hide');
                debugger;


            },
            error: function (data) {
                debugger;
            },
            cache: false,
            contentType: false,
            processData: false
        });


        return false;



    });



</script>

<style>
    .modal-header {
        background-color: #3c8dbc;
        color: white !important;
        text-align: center;
        font-size: 30px;
    }

    /*.modal-footer {
        background-color: #f9f9f9;
    }*/


    .myHeader {
        height: 28px;
        margin-bottom: 14px;
        margin-right: -15px;
        /* border-top: none; */
        border-bottom: 1px solid grey;
        /* border-radius: 9px; */
        padding-top: 3px;
        background-color: #3c8dbc;
        margin-left: -15px;
        color: white;
        border-top-left-radius: 9px;
        border-top-right-radius: 9px;
    }

    .ledger-details:hover {
        background-color: #3c8dbc;
    }
</style>
