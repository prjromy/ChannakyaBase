@model IEnumerable<ChannakyaAccounting.Models.ViewModel.SchemeDetailViewModel>
@*<script src="~/Scripts/ch-treeview.js"></script>*@
@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Scheme Setup";
    var test = Model;
}

<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title"> @ViewBag.Title </h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div><!-- /.box-header -->

    <div class="box-body">
        <div id="explorer" class="Scheme-explore section-treeview ">
            @Html.Hidden("viewType", 1)

            <div id="explore-details" class="col-md-12 explore-details">
                <div class="panel-create " id="create">

                </div>
                <div class="panel-list" id="list">
                    @{Html.RenderPartial("_Details", Model);}
                </div>
            </div>



        </div><!-- /.box-body -->
    </div><!-- /.box -->
</div>

<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        var test = $("input.btn.btn-box-tool.txtSearch");
        $("input.btn.btn-box-tool.txtSearch").focus();

    });

    $('.Scheme-explore').on('click', '.listView', function (event) {
        debugger;

        var viewId = $(this).closest('.Scheme-explore').find('#viewType')
        if (viewId.val() == 1) {
            viewId.val(2)
        }
        else {
            viewId.val(1)
        }
        var nodeId = $(this).closest('.panel-list').find('input#pSchemeId').val();
        if (nodeId == "") {
            nodeId = 0;
        }
        $('.panel-list').trigger('nodeClick', [{ nodeId: nodeId }]);

    });

    $('.panel-list').on('nodeClick', function (e, data) {
        debugger;
        e.stopPropagation();
        if (data.allowSelectGroupNode == null) {
            data.allowSelectGroupNode = false;
        }
        var container = $(this).closest('.Scheme-explore').find('.panel-list');
        var listType = $(this).closest('.Scheme-explore').find('#viewType').val();
        $.ajax({
            type: "get",
            url: '@Url.Action("_Details", "Scheme")',
            contentType: "application/json; charset=utf-8",
            data: { allowSelectGroup: data.allowSelectGroupNode, ViewType: listType, empId: data.nodeId },
            dataType: "html",
            success: function (html) {
                $(container).html(html);
            },
            error: function () {
                alert("error");
            }
        });
    });

    $('.Scheme-explore').on('click', "#btn-back", function (e) {

        $(this).closest('.Scheme-explore').find('.Scheme-treeview').moveUp();
        //$(this).closest('.Scheme-explore').find('.Scheme-treeview').updateTreeview("Scheme", "_UpdateSchemeTree", 1009,-1)
    });

    $('.Scheme-explore').on('click', ".btndrill , .listDrill", function (e) {
        var id = $(this).attr("id");
        $(this).closest('.Scheme-explore').find('.Scheme-treeview').SelectNode(id);
    });


    $('.Scheme-explore').on('click', '.SchemeImage, .editList, .btn-create-Schemes', function (e) {
        debugger;
        e.stopPropagation();
        var container = $(this).closest('.Scheme-explore').find('.panel-create');
        var SchemeId = 0;
        if ($(this).attr('class') == 'SchemeImage' || 'editList') {
            SchemeId = $(this).attr('id');
        }

        //-------------------------------------------------------------------------------------//
        $.ajax({
            type: "get",
            url: '@Url.Action("Create", "Scheme")',
            data: { SchemeId: SchemeId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (html) {
                $(container).html(html);
                debugger
                var stype = 0;
                var DepositType = 0;
                $.ajax({
                    url: '/Scheme/GetStypeFromSchemeId/',
                    data: { SchemeId: SchemeId },
                    dataType: "html",
                    success: function (data) {
                        //$(container).show();
                        debugger
                        stype = data;

                        if (stype == "0") {
                            debugger

                            $.ajax({
                                url: '/Scheme/GetDepositTypeFromSchemeId/',
                                data: { SchemeId: SchemeId },
                                dataType: "html",
                                async: false,
                                success: function (data2) {
                                    //$(container).show();
                                    debugger
                                    DepositType = data2;

                                }
                            })

                            var container2 = $('.FinAcc-create').find('.depositgroup-container')
                            var form = $(container2).closest("form");
                            $.ajax({
                                url: '/Scheme/GetSchemeDepositType/',
                                dataType: "html",
                                success: function (data) {
                                    //$(container).show();
                                    debugger
                                    $(container2).html(data);
                                    if (DepositType === '235') {
                                        $('#F2Type').val('235');
                                    }
                                    else {
                                        $('#F2Type').val('255');
                                    }


                                }
                            })
                        }
                    }
                })

               
                $(container).removeData("validator");
                $(container).removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse($(container));


            },
            error: function () {
                alert("error");
            }
        });

    });

    $('.Scheme-explore').on('click', '.deleteNode', function (e) {
        debugger;
        var SchemeId = $(this).attr('id');
        var nodeId = $(this).closest('.panel-list').find('input#pSchemeId').val()
        @*$.ajax({
            type: "get",
            url: '@Url.Action("Delete", "Scheme")',
            data: { id: SchemeId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (deleteConfirm) {*@
        $.MessageBox({
            buttonDone: "Yes",
            buttonFail: "No",
            message: "Are you sure you want to Delete?"
        }).done(function () {

            debugger;
            //if (deleteConfirm == 'true') {
            //    debugger;
            deleteScheme(SchemeId, nodeId);
            //}
            //else {
            //    ErrorAlert("Please Delete Child Nodes First", 5000);
            //}
        })
        //    },
        //    // $(container).html(html);

        //    error: function () {
        //        alert("error");
        //    }
        //});


    });
    function deleteScheme(SchemeId, nodeId) {

        $.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteConfirm", "Scheme")',
            data: { SchemeId: SchemeId },
            success: function (result) {
                debugger
                if (result.Success == true)
                {
                    SuccessAlert(result.Msg, 5000)
                }
                else {
                    ErrorAlert(result.Msg, 5000)
                }
                $('.panel-list').trigger('nodeClick', [{ nodeId: nodeId }]);
            },
            error: function () {
                alert("error");
            }
        });
    }


    $('.ch-treeview').on('filterTree', function (e, data) {
        debugger;
        //string filterString, bool allowSelectGroup, bool withCheckBox, bool withImageIcon
        e.stopPropagation();
        var TreeViewParam = {
            Controller: '',
            Action: '',
            WithCheckBox: data.withCheckBox,
            AllowSelectGroup: data.allowSelectGroupNode,
            WithImageIcon: data.withImageIcon,
            WithOutMe: 0,// data.withOutMe,
            Title: data.Title,
            SelectedNodeId: 0,
            Filter: data.param.Filter,
            SelectedNodeText: ''
        }

        var url = "/Scheme/_GetSchemeTree"
        var container = $(this).closest('.Scheme-explore').find('.treeview-area');

        $(container).load(url, { param: TreeViewParam });

    });

    $('.panel-list').on('keyup', ".txtSearch", function (e) {
        debugger;
        var query = $('input.txtSearch').val();
        var listType = $(this).closest('.Scheme-explore').find('#viewType').val();
        var container = $(this).closest('.Scheme-explore').find('.panel-list').find('.bodycontent-and-paging');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("_DetailPartial", "Scheme")',
            data: { ViewType: listType, query: query },
            success: function (data) {
                debugger;
                var test = $("input.btn.btn-box-tool.txtSearch");
                $("input.btn.btn-box-tool.txtSearch").focus();
                $(container).html(data);
            },
            error: function () {
                alert("error");
            }
        });
    });

</script>
