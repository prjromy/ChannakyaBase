@model ChannakyaBase.DAL.DatabaseModel.LicenseBranch
@using ChannakyaBase.BLL.Service
@using ChannakyaCustomeDatePicker.Helper;
@{
    if (Model.BrnhID != 0)
    {
        var state = FinanceParameterUtilityService.GetStateByBranchId(Model.BrnhID);
    }
}

@using (Ajax.BeginForm("_BranchCreate", "FinanceParameter", new AjaxOptions
{
    UpdateTargetId = "BranchSetup-list",
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "Post",
    OnSuccess = "createSuccess"
    //OnFailure = "errMessage"

}, new { id = "BranchSubmitForm" }))
{
    @Html.AntiForgeryToken()
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Branch Create</h3>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-horizontal">
                        <fieldset>
                            <legend>Branch details</legend>
                            @Html.HiddenFor(x => x.BrnhID)
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })   
                            <div class="form-group">
                                @Html.LabelFor(model => model.BrnhNam, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.BrnhNam, new { htmlAttributes = new { @class = "form-control focusdiv" } })
                                    @Html.ValidationMessageFor(model => model.BrnhNam, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">                                                        
                                @Html.LabelFor(model => model.RegID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.RegID, FinanceParameterUtilityService.Region(), htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RegID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Addr, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Addr, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Addr, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.State, "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.IPAdd, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.IPAdd, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IPAdd, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PBrnhID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.PBrnhID, FinanceParameterUtilityService.ParentBranch(), htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PBrnhID, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.ExtraUsrNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.ExtraUsrNo, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ExtraUsrNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Prefix, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Prefix, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend>Branch Global details</legend>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TDate, "Transaction Date", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DatePicker(x => x.TDate)
                                    @*@Html.EditorFor(model => model.TDate, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.TDate, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.MigDate, "Migration Date", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DatePicker(x => x.MigDate)
                                    @Html.ValidationMessageFor(model => model.MigDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Floint, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Floint, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Floint, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.CleCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.CleCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CleCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="form-group">
                                   @Html.LabelFor(model => model.CalSID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.CalSID, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CalSID, "", new { @class = "text-danger" })
                                        </div>

                                    @Html.LabelFor(model => model.CalCid, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.CalCid, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CalCid, "", new { @class = "text-danger" })
                                        </div>
                                </div>*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.inExpMode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.inExpMode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.inExpMode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.atclosing, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.atclosing)
                                        @Html.ValidationMessageFor(model => model.atclosing, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @Html.LabelFor(model => model.UseLimit, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    <div class="checkbox">

                                        @Html.EditorFor(model => model.UseLimit)
                                        @Html.ValidationMessageFor(model => model.UseLimit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @Html.LabelFor(model => model.IsCalcIOnI, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    <div class="checkbox">

                                        @Html.EditorFor(model => model.IsCalcIOnI)
                                        @Html.ValidationMessageFor(model => model.IsCalcIOnI, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            
                        </fieldset>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="button" value="Save" id="btn-save-branch" class="btn btn-default btn-save " />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/DatePicker/Channakya-DatePicker.js"></script>
<link href="~/Scripts/DatePicker/DatePicker.css" rel="stylesheet" />

