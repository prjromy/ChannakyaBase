@model  List<ChannakyaBase.Model.ViewModel.CollectionSheetTransReportViewModel>
@using ChannakyaBase.BLL
@using ChannakyaBase.BLL.Service
@{
    CommonService cmService = new CommonService();
    decimal TotalAmount = 0;
    decimal TotalLoanAmount = 0;
    decimal TotalDepositAmount = 0;

    var test = Model;
    // string address = ViewBag.Address.ToString();
    var pProductId = ViewBag.ParentProductId;
}

<div class="box box-success">
    <div class="box-header" style="background-color:cornflowerblue; color:white;">

        <div class="col-md-9" style="margin:-5px; padding-left:0px;">
            <b>Collection Sheet Wise Report</b>
        </div>
        <div class="box-tools" style="margin: -6px 0 0 0;">
            <div class="pProductId">@Html.HiddenFor(x => pProductId)</div>
            @if (ViewBag.Query != null)
            {
                <input type="text" name="text-filter-tree" class="btn btn-box-tool txtSearch" value="@ViewBag.Query" placeholder="Search..." style="background-color:white;height:30px;margin-bottom: 4px">
            }
            else
            {
                <input type="text" name="text-filter-tree" class="btn btn-box-tool txtSearch" placeholder="Search..." style="background-color:white;height:30px;margin-bottom: 4px">
            }
        </div>
    </div><!-- /.box-header -->
    <div class="bodycontent-and-paging">
        <div class="box-body">
            @{var hasChild = Model.Count(); }
            @if (hasChild == 0)
            {
                <b> No Childs found to Display</b>
            }
            else
            {
                <div class="listTable" style="max-height:400px;overflow:auto;">
                    <div class="container col-md-12">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table id="mytable" class="table table-bordred table-striped">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Transaction Date
                                                </th>
                                                <th>
                                                    Sheet No
                                                </th>
                                                <th>
                                                    Collector
                                                </th>
                                                <th>
                                                    Total Amount
                                                </th>
                                                <th>
                                                    Loan Amount
                                                </th>
                                                <th>
                                                    Deposit Amount
                                                </th>
                                                <th>
                                                    Loan Count
                                                </th>
                                                <th>
                                                    Deposit Count
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model)
                                            {
                                                <tr>
                                                    <td>
                                                        @if (item.TDate != Convert.ToDateTime("1/1/0001 12:00:00 AM"))
                                                        {
                                                            <span>@cmService.GetEnglishDate(Convert.ToDateTime(item.TDate))</span>
                                                        }
                                                    </td>
                                                    <td>
                                                        <span>@item.SheetNo</span>
                                                    </td>
                                                    <td>
                                                        <span>@item.EmployeeName</span>
                                                    </td>
                                                    <td style="text-align:right">
                                                        <span>@Convert.ToDecimal(item.TotalAmount).ToString("0,0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                                                    </td>
                                                    <td style="text-align:right">
                                                        <span>@Convert.ToDecimal(item.LoanAmount).ToString("0,0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                                                    </td>
                                                    <td style="text-align:right">
                                                        <span>@Convert.ToDecimal(item.DepositAmount).ToString("0,0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                                                    </td>
                                                    <td style="text-align:right">
                                                        <span> @item.LoanCount</span>
                                                    </td>
                                                    <td style="text-align:right">
                                                        <span> @item.DepositCount</span>
                                                    </td>
                                                </tr>
                                                TotalAmount += Convert.ToDecimal(item.TotalAmount);
                                                TotalDepositAmount += Convert.ToDecimal(item.DepositAmount);
                                                TotalLoanAmount += Convert.ToDecimal(item.LoanAmount);
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div><!-- /.box-body -->
        @if (ViewBag.CountPager > 0)
        {
            <ul class="pagination Productpagination" style="float:left;margin-right:20px;">
                <li class="previous"><a href="#">Previous</a></li>

                @for (int i = 1; i <= ViewBag.CountPager; i++)
                {
                    if (i > 4)
                    {
                        if (i == ViewBag.ActivePager)
                        {
                            <li id=@i class="pagerClass active"><a>@i</a> </li>
                        }
                        else
                        {
                            if (i >= (ViewBag.ActivePager - 2))
                            {

                                if (i > ViewBag.ActivePager)
                                {
                                    if (i - ViewBag.ActivePager <= 2)
                                    {
                                        <li id=@i class="pagerClass"><a>@i</a> </li>
                                    }
                                    else
                                    {
                                        if (i == ViewBag.CountPager)
                                        {
                                            if (ViewBag.CountPager - ViewBag.ActivePager > 3)
                                            {
                                                <li class=""><a>.......</a> </li>
                                            }
                                            <li id=@i class="pagerClass"><a>@i</a> </li>
                                        }
                                        <li id=@i class="pagerClass" style="display:none;"><a>@i</a> </li>
                                    }
                                }
                                else
                                {

                                    <li id=@i class="pagerClass"><a>@i</a> </li>
                                }

                            }
                            else
                            {
                                <li id=@i class="pagerClass" style="display:none;"><a>@i</a> </li>
                            }
                        }
                    }
                    else
                    {
                        if (i == ViewBag.ActivePager)
                        {
                            <li id=@i class="pagerClass active"><a>@i</a> </li>
                        }
                        else
                        {
                            if (i >= (ViewBag.ActivePager - 2))
                            {
                                <li id=@i class="pagerClass"><a>@i</a> </li>
                            }
                            else
                            {
                                <li id=@i class="pagerClass" style="display:none;"><a>@i</a> </li>
                            }
                        }
                    }
                }
                <li class="next"><a href="#">Next</a></li>

            </ul>

            <div style="margin-top:20px;margin-left:20px" class="search-container">
                @Html.TextBox("SearchPager", null, new { @class = "form-control searchPager", @style = "width:65px;", @placeholder = "PageNo" })
            </div>
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        var searchInput = $('input.btn.btn-box-tool.txtSearch');
        var strLength = searchInput.val().length * 2;
        searchInput.focus();
        searchInput[0].setSelectionRange(strLength, strLength);
        var Search = $('.txtSearch').val();
        var FromDate = $('#FromDate').val();
        var ToDate = $('#ToDate').val();

        $('.pagination').on('click', 'li.next , li.previous', function () {
            debugger;
            var cls = $(this).attr('class');
            if ($(this).attr('class') == 'next') {
                debugger;
                var pager = $('ul.pagination.Productpagination').find('.active').attr('id');
                var finalId = parseInt(pager) + 1;
                var hasNext = $('ul.pagination.Productpagination').find('li#' + finalId)
                if ($(hasNext).length > 0) {
                    var container = $(this).closest('.collection-transaction-index').find('.collection-transaction-details').find('.bodycontent-and-paging');
                    var listType = $(this).closest('.Product-explore').find('#viewType').val();

                    $.ajax({
                        url: "/Report/_CollectionSheetReportPartial",
                        type: "GET",
                        data: {
                            FDate: FromDate,
                            TDate: ToDate,
                            page: finalId,
                            search: Search
                        },
                        success: function (data) {
                            debugger;
                            $(container).html(data);
                        }

                    });
                    //$(container).load("/Report/_CollectionSheetReportPartial", {FDate:FromDate,TDate:ToDate, page: finalId, search: Search });

                    var checkActive = $('ul.pagination.Productpagination').find('li').hasClass('active');
                    if (checkActive == true) {
                        $('ul.pagination.Productpagination').find('.active').removeClass('active');
                    }
                    $('ul.pagination.Productpagination').find('li#' + finalId).addClass('active');
                }
            }
            else {
                debugger;
                var pager = $('ul.pagination.Productpagination').find('.active').attr('id');
                var finalId = parseInt(pager) - 1;
                var hasPrev = $('ul.pagination.Productpagination').find('li#' + finalId)
                var listType = $(this).closest('.Product-explore').find('#viewType').val();
                if ($(hasPrev).length > 0) {
                    var container = $(this).closest('.collection-transaction-index').find('.collection-transaction-details').find('.bodycontent-and-paging');

                    $.ajax({
                        url: "/Report/_CollectionSheetReportPartial",
                        type: "GET",
                        data: {
                            FDate: FromDate,
                            TDate: ToDate,
                            page: finalId,
                            search: Search
                        },
                        success: function (data) {
                            debugger;
                            $(container).html(data);
                        }

                    });
                    //$(container).load("/Report/_CollectionSheetReportPartial", { page: finalId, ViewType: listType, query: Search });

                    var checkActive = $('ul.pagination.Productpagination').find('li').hasClass('active');
                    if (checkActive == true) {
                        $('ul.pagination.Productpagination').find('.active').removeClass('active');
                    }
                    $('ul.pagination.Productpagination').find('li#' + finalId).addClass('active');

                }
            }

        });
        $('.search-container').on('change', '.searchPager', function () {
            debugger;
            var finalId = $(this).val();
            //var pagingData = $(this).val();
            var listType = $(this).closest('.Product-explore').find('#viewType').val();
            var container = $(this).closest('.collection-transaction-index').find('.collection-transaction-details').find('.bodycontent-and-paging');
            if (isNaN(finalId) == false || finalId != 0) {
                $.ajax({
                    url: "/Report/_CollectionSheetReportPartial",
                    type: "POST",
                    data: {
                        FDate: FromDate,
                        TDate: ToDate,
                        page: finalId,
                        search: Search
                    },
                    success: function (data) {
                        debugger;
                        $(container).html(data);
                        $(container).focus();

                        var checkActive = $('ul.pagination.Productpagination').find('li').hasClass('active');
                        if (checkActive == true) {
                            $('ul.pagination.Productpagination').find('.active').removeClass('active');
                        }
                        $('ul.pagination.Productpagination').find('li#' + finalId).addClass('active');
                    }

                });
            }

        });
        $('.pagination').on('click', '.pagerClass', function () {
            debugger;
            var finalId = $(this).attr('id');
            var pagingData = $(this).attr('id');
            var container = $(this).closest('.collection-transaction-index').find('.collection-transaction-details').find('.bodycontent-and-paging');
            var listType = $(this).closest('.Product-explore').find('#viewType').val();
            $.ajax({
                url: "/Report/_CollectionSheetReportPartial",
                type: "GET",
                data: {
                    FDate: FromDate,
                    TDate: ToDate,
                    page: finalId,
                    search: Search
                },
                success: function (data) {
                    debugger;
                    $(container).html(data);
                    var checkActive = $('ul.pagination.Productpaginatoin').find('li').hasClass('active');
                    if (checkActive == true) {
                        $('ul.pagination.Productpaginatoin').find('.active').removeClass('active');
                    }
                    $('ul.pagination.Productpaginatoin').find('li#' + finalId).addClass('active');

                }

            });

        });
        $('.txtSearch').change(function () {
            debugger;
            var finalId = 1;
            var Search = $(this).val();

            //var pagingData = $(this).val();
            var container = $(this).closest('.collection-transaction-index').find('.collection-transaction-details').find('.bodycontent-and-paging');

            $.ajax({
                url: "/Report/_CollectionSheetReportPartial",
                type: "POST",
                data: {
                    FDate: FromDate,
                    TDate: ToDate,
                    page: finalId,
                    search: Search
                },
                success: function (data) {
                    debugger;
                    $(container).html(data);
                    $(container).focus();

                }

            });


        });
    });

  
</script>

<style>
    .details {
        width: 30%;
        max-height: 129px;
    }

    input.btn.btn-box-tool.txtSearch {
        cursor: text;
    }
</style>

@*<div class="box-body table-responsive no-padding">
    <table class="table table-bordered table-hover">
        <tr>
            <th>
                Transaction Date
            </th>
            <th>
                Sheet No
            </th>
            <th>
                Collector
            </th>
            <th>
                Total Amount
            </th>
            <th>
                Loan Amount
            </th>
            <th>
                Deposit Amount
            </th>
            <th>
                Loan Count
            </th>
            <th>
                Deposit Count
            </th>

        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.TDate != Convert.ToDateTime("1/1/0001 12:00:00 AM"))
                {
                        <span>@cmService.GetEnglishDate(Convert.ToDateTime(item.TDate))</span>
                    }
                </td>
                <td>
                    <span>@item.SheetNo</span>
                </td>
                <td>
                    <span>@item.EmployeeName</span>
                </td>
                <td style="text-align:right">
                    <span>@Convert.ToDecimal(item.TotalAmount).ToString("0,0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                </td>
                <td style="text-align:right">
                    <span>@Convert.ToDecimal(item.LoanAmount).ToString("0,0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                </td>
                <td style="text-align:right">
                    <span>@Convert.ToDecimal(item.DepositAmount).ToString("0,0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                </td>
                <td style="text-align:right">
                    <span> @item.LoanCount</span>
                </td>
                <td style="text-align:right">
                    <span> @item.DepositCount</span>
                </td>

            </tr>
            TotalAmount += Convert.ToDecimal(item.TotalAmount);
            TotalDepositAmount += Convert.ToDecimal(item.DepositAmount);
            TotalLoanAmount += Convert.ToDecimal(item.LoanAmount);


        }

    </table>

</div>*@