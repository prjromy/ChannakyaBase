//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChannakyaBase.DAL.DatabaseModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChannakyaBaseEntities : DbContext
    {
        public ChannakyaBaseEntities()
            : base("name=ChannakyaBaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CertificateDef> CertificateDefs { get; set; }
        public virtual DbSet<ContactDef> ContactDefs { get; set; }
        public virtual DbSet<CustAddress> CustAddresses { get; set; }
        public virtual DbSet<CustCertificate> CustCertificates { get; set; }
        public virtual DbSet<CustCompany> CustCompanies { get; set; }
        public virtual DbSet<CustCompGroup> CustCompGroups { get; set; }
        public virtual DbSet<CustContact> CustContacts { get; set; }
        public virtual DbSet<CustContactPerson> CustContactPersons { get; set; }
        public virtual DbSet<CustIndividual> CustIndividuals { get; set; }
        public virtual DbSet<CustInfo> CustInfoes { get; set; }
        public virtual DbSet<CustIRegContact> CustIRegContacts { get; set; }
        public virtual DbSet<CustType> CustTypes { get; set; }
        public virtual DbSet<CustTypeCertificate> CustTypeCertificates { get; set; }
        public virtual DbSet<CustTypeContact> CustTypeContacts { get; set; }
        public virtual DbSet<CustTypeSector> CustTypeSectors { get; set; }
        public virtual DbSet<OccupationDef> OccupationDefs { get; set; }
        public virtual DbSet<RemittanceCustomer> RemittanceCustomers { get; set; }
        public virtual DbSet<ADrlimitLog> ADrlimitLogs { get; set; }
        public virtual DbSet<LicenseRegion> LicenseRegions { get; set; }
        public virtual DbSet<AAdjustmnt> AAdjustmnts { get; set; }
        public virtual DbSet<ABal> ABals { get; set; }
        public virtual DbSet<AccountStatu> AccountStatus { get; set; }
        public virtual DbSet<AChq> AChqs { get; set; }
        public virtual DbSet<AchqH> AchqHs { get; set; }
        public virtual DbSet<AchqHH> AchqHHs { get; set; }
        public virtual DbSet<Aclosed> Acloseds { get; set; }
        public virtual DbSet<ADetail> ADetails { get; set; }
        public virtual DbSet<ADrLimit> ADrLimits { get; set; }
        public virtual DbSet<ADSch> ADSches { get; set; }
        public virtual DbSet<ADSchLog> ADSchLogs { get; set; }
        public virtual DbSet<ADur> ADurs { get; set; }
        public virtual DbSet<AICBDur> AICBDurs { get; set; }
        public virtual DbSet<AintCap> AintCaps { get; set; }
        public virtual DbSet<AintPayable> AintPayables { get; set; }
        public virtual DbSet<ALColl> ALColls { get; set; }
        public virtual DbSet<ALCollLand> ALCollLands { get; set; }
        public virtual DbSet<ALCollVehicle> ALCollVehicles { get; set; }
        public virtual DbSet<ALFixedDeposit> ALFixedDeposits { get; set; }
        public virtual DbSet<ALoanGrace> ALoanGraces { get; set; }
        public virtual DbSet<ALRegCust> ALRegCusts { get; set; }
        public virtual DbSet<ALRegistration> ALRegistrations { get; set; }
        public virtual DbSet<ALSch> ALSches { get; set; }
        public virtual DbSet<ALSchHistry> ALSchHistries { get; set; }
        public virtual DbSet<AMClearance> AMClearances { get; set; }
        public virtual DbSet<AMinBal> AMinBals { get; set; }
        public virtual DbSet<AMTransLoan> AMTransLoans { get; set; }
        public virtual DbSet<ANomAcc> ANomAccs { get; set; }
        public virtual DbSet<ANominee> ANominees { get; set; }
        public virtual DbSet<AOfCust> AOfCusts { get; set; }
        public virtual DbSet<AOPolInt> AOPolInts { get; set; }
        public virtual DbSet<APBookChked> APBookChkeds { get; set; }
        public virtual DbSet<APolicyInterest> APolicyInterests { get; set; }
        public virtual DbSet<APolPen> APolPens { get; set; }
        public virtual DbSet<APRate> APRates { get; set; }
        public virtual DbSet<ARate> ARates { get; set; }
        public virtual DbSet<ARateMaster> ARateMasters { get; set; }
        public virtual DbSet<ASClearance> ASClearances { get; set; }
        public virtual DbSet<ASTransLoan> ASTransLoans { get; set; }
        public virtual DbSet<ASTransLoanDesc> ASTransLoanDescs { get; set; }
        public virtual DbSet<ATempFloatIntRate> ATempFloatIntRates { get; set; }
        public virtual DbSet<AWtdQueue> AWtdQueues { get; set; }
        public virtual DbSet<CashFlow> CashFlows { get; set; }
        public virtual DbSet<CashLimit> CashLimitS { get; set; }
        public virtual DbSet<ChequeBookStatu> ChequeBookStatus { get; set; }
        public virtual DbSet<ChqAttribute> ChqAttributes { get; set; }
        public virtual DbSet<ChqInventory> ChqInventories { get; set; }
        public virtual DbSet<ChqSize> ChqSizes { get; set; }
        public virtual DbSet<CollMainTemp> CollMainTemps { get; set; }
        public virtual DbSet<CollSheet> CollSheets { get; set; }
        public virtual DbSet<CollSheetTran> CollSheetTrans { get; set; }
        public virtual DbSet<CollTemp> CollTemps { get; set; }
        public virtual DbSet<CurrencyType> CurrencyTypes { get; set; }
        public virtual DbSet<DenoBal> DenoBals { get; set; }
        public virtual DbSet<Denosetup> Denosetups { get; set; }
        public virtual DbSet<DepositBasi> DepositBasis { get; set; }
        public virtual DbSet<DisburseCash> DisburseCashes { get; set; }
        public virtual DbSet<DisburseCharge> DisburseCharges { get; set; }
        public virtual DbSet<DisburseCheque> DisburseCheques { get; set; }
        public virtual DbSet<DisburseDeposit> DisburseDeposits { get; set; }
        public virtual DbSet<DisburseVsPID> DisburseVsPIDs { get; set; }
        public virtual DbSet<Duration> Durations { get; set; }
        public virtual DbSet<EmployeeVsBranch> EmployeeVsBranches { get; set; }
        public virtual DbSet<Flag> Flags { get; set; }
        public virtual DbSet<ForeignSBuySell> ForeignSBuySells { get; set; }
        public virtual DbSet<FrxCurrency> FrxCurrencies { get; set; }
        public virtual DbSet<HADRenew> HADRenews { get; set; }
        public virtual DbSet<HALRenew> HALRenews { get; set; }
        public virtual DbSet<IchkBounce> IchkBounces { get; set; }
        public virtual DbSet<IChkDep> IChkDeps { get; set; }
        public virtual DbSet<InterestLog> InterestLogs { get; set; }
        public virtual DbSet<LicenseBranch> LicenseBranches { get; set; }
        public virtual DbSet<MessInfo> MessInfoes { get; set; }
        public virtual DbSet<MobileBanking> MobileBankings { get; set; }
        public virtual DbSet<MyBalance> MyBalances { get; set; }
        public virtual DbSet<NCollateralDetail> NCollateralDetails { get; set; }
        public virtual DbSet<PolicyIntCalc> PolicyIntCalcs { get; set; }
        public virtual DbSet<PolicyPenCalc> PolicyPenCalcs { get; set; }
        public virtual DbSet<ProductBrnch> ProductBrnches { get; set; }
        public virtual DbSet<ProductDetail> ProductDetails { get; set; }
        public virtual DbSet<ProductDurationInt> ProductDurationInts { get; set; }
        public virtual DbSet<ProductICBDur> ProductICBDurs { get; set; }
        public virtual DbSet<ProductPay> ProductPays { get; set; }
        public virtual DbSet<ProductPCID> ProductPCIDs { get; set; }
        public virtual DbSet<ProductPSID> ProductPSIDs { get; set; }
        public virtual DbSet<ProductTID> ProductTIDs { get; set; }
        public virtual DbSet<ReferenceInfo> ReferenceInfoes { get; set; }
        public virtual DbSet<RemitDeposit> RemitDeposits { get; set; }
        public virtual DbSet<RemitPayment> RemitPayments { get; set; }
        public virtual DbSet<RuleBalance> RuleBalances { get; set; }
        public virtual DbSet<RuleDuration> RuleDurations { get; set; }
        public virtual DbSet<RuleICB> RuleICBs { get; set; }
        public virtual DbSet<RuleICBDuration> RuleICBDurations { get; set; }
        public virtual DbSet<RuleMovement> RuleMovements { get; set; }
        public virtual DbSet<RulePay> RulePays { get; set; }
        public virtual DbSet<RulePaySch> RulePaySches { get; set; }
        public virtual DbSet<RulePenBalance> RulePenBalances { get; set; }
        public virtual DbSet<RuleRate> RuleRates { get; set; }
        public virtual DbSet<RuleRenew> RuleRenews { get; set; }
        public virtual DbSet<SchmDetail> SchmDetails { get; set; }
        public virtual DbSet<SCrtDtl> SCrtDtls { get; set; }
        public virtual DbSet<SectorDef> SectorDefs { get; set; }
        public virtual DbSet<ShrReg> ShrRegs { get; set; }
        public virtual DbSet<ShrSPurchase> ShrSPurchases { get; set; }
        public virtual DbSet<ShrSReturn> ShrSReturns { get; set; }
        public virtual DbSet<Snominee> Snominees { get; set; }
        public virtual DbSet<StatusChangeLog> StatusChangeLogs { get; set; }
        public virtual DbSet<SWRestrictionA> SWRestrictionAs { get; set; }
        public virtual DbSet<TaxsetupDef> TaxsetupDefs { get; set; }
        public virtual DbSet<TempALSch> TempALSches { get; set; }
        public virtual DbSet<TempIntRate> TempIntRates { get; set; }
        public virtual DbSet<TempIntRateVal> TempIntRateVals { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<FiscalYear> FiscalYears { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<UserVSBranch> UserVSBranches { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationMaster> LocationMasters { get; set; }
        public virtual DbSet<LocationTypeDef> LocationTypeDefs { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<SheetNo> SheetNoes { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TaskDetail> TaskDetails { get; set; }
        public virtual DbSet<AMTrn> AMTrns { get; set; }
        public virtual DbSet<ASTrn> ASTrns { get; set; }
        public virtual DbSet<ChgMTrnx> ChgMTrnxes { get; set; }
        public virtual DbSet<ChgSTrnx> ChgSTrnxes { get; set; }
        public virtual DbSet<DenoTrxn> DenoTrxns { get; set; }
        public virtual DbSet<DenoTrxnLog> DenoTrxnLogs { get; set; }
        public virtual DbSet<FrxCurrencyRate> FrxCurrencyRates { get; set; }
        public virtual DbSet<TmEditLog> TmEditLogs { get; set; }
        public virtual DbSet<TType> TTypes { get; set; }
        public virtual DbSet<AIntExpens> AIntExpenses { get; set; }
        public virtual DbSet<ALoanTra> ALoanTras { get; set; }
        public virtual DbSet<AMClearanceH> AMClearanceHs { get; set; }
        public virtual DbSet<AMClearanceHR> AMClearanceHRs { get; set; }
        public virtual DbSet<AODIntReceivable> AODIntReceivables { get; set; }
        public virtual DbSet<AODSetUp> AODSetUps { get; set; }
        public virtual DbSet<ForeignBuySell> ForeignBuySells { get; set; }
        public virtual DbSet<IntLog> IntLogs { get; set; }
        public virtual DbSet<ProductCurrency> ProductCurrencies { get; set; }
        public virtual DbSet<ProductOPSID> ProductOPSIDs { get; set; }
        public virtual DbSet<ShrPurchase> ShrPurchases { get; set; }
        public virtual DbSet<ShrReturn> ShrReturns { get; set; }
        public virtual DbSet<ChequeBookStatus1> ChequeBookStatus1 { get; set; }
        public virtual DbSet<ShrSetup> ShrSetups { get; set; }
        public virtual DbSet<taskDetails1> taskDetails1 { get; set; }
        public virtual DbSet<uttno> uttnoes { get; set; }
        public virtual DbSet<TranLnk> TranLnks { get; set; }
        public virtual DbSet<TransactionEditStatusLog> TransactionEditStatusLogs { get; set; }
        public virtual DbSet<FinAcc> FinAccs { get; set; }
        public virtual DbSet<FinSys1> FinSys1 { get; set; }
        public virtual DbSet<FinSys2> FinSys2 { get; set; }
        public virtual DbSet<DisbursementMain> DisbursementMains { get; set; }
        public virtual DbSet<ChqRqst> ChqRqsts { get; set; }
        public virtual DbSet<ALinkloan> ALinkloans { get; set; }
        public virtual DbSet<ChargeDetail> ChargeDetails { get; set; }
        public virtual DbSet<ShareReferenceInfo> ShareReferenceInfoes { get; set; }
        public virtual DbSet<AchqFGdPymt> AchqFGdPymts { get; set; }
        public virtual DbSet<Guarantor> Guarantors { get; set; }
        public virtual DbSet<ALoan> ALoans { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<ParamValue> ParamValues { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<ProductVfin> ProductVfins { get; set; }
        public virtual DbSet<SchemeVFin> SchemeVFins { get; set; }
        public virtual DbSet<ReferenceTnoLink> ReferenceTnoLinks { get; set; }
    
        [DbFunction("ChannakyaBaseEntities", "FGetCustContact")]
        public virtual IQueryable<FGetCustContact_Result> FGetCustContact()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetCustContact_Result>("[ChannakyaBaseEntities].[FGetCustContact]()");
        }
    
        [DbFunction("ChannakyaBaseEntities", "FGetCustContactLocation")]
        public virtual IQueryable<FGetCustContactLocation_Result> FGetCustContactLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetCustContactLocation_Result>("[ChannakyaBaseEntities].[FGetCustContactLocation]()");
        }
    
        [DbFunction("ChannakyaBaseEntities", "FGetCustList")]
        public virtual IQueryable<FGetCustList_Result> FGetCustList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetCustList_Result>("[ChannakyaBaseEntities].[FGetCustList]()");
        }
    
        [DbFunction("ChannakyaBaseEntities", "FGetCustListForSearch")]
        public virtual IQueryable<FGetCustListForSearch_Result> FGetCustListForSearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetCustListForSearch_Result>("[ChannakyaBaseEntities].[FGetCustListForSearch]()");
        }
    
        [DbFunction("ChannakyaBaseEntities", "FGetCustLocation")]
        public virtual IQueryable<FGetCustLocation_Result> FGetCustLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetCustLocation_Result>("[ChannakyaBaseEntities].[FGetCustLocation]()");
        }
    
        [DbFunction("ChannakyaBaseEntities", "FGetDefaultCustContact")]
        public virtual IQueryable<FGetDefaultCustContact_Result> FGetDefaultCustContact()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetDefaultCustContact_Result>("[ChannakyaBaseEntities].[FGetDefaultCustContact]()");
        }
    
        [DbFunction("ChannakyaBaseEntities", "FGetLocationTB")]
        public virtual IQueryable<FGetLocationTB_Result> FGetLocationTB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetLocationTB_Result>("[ChannakyaBaseEntities].[FGetLocationTB]()");
        }
    
        public virtual int PSetCreateLocationInSelectedLvl(Nullable<int> currentRoot, Nullable<int> lvlToCreate, string locationName)
        {
            var currentRootParameter = currentRoot.HasValue ?
                new ObjectParameter("CurrentRoot", currentRoot) :
                new ObjectParameter("CurrentRoot", typeof(int));
    
            var lvlToCreateParameter = lvlToCreate.HasValue ?
                new ObjectParameter("LvlToCreate", lvlToCreate) :
                new ObjectParameter("LvlToCreate", typeof(int));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSetCreateLocationInSelectedLvl", currentRootParameter, lvlToCreateParameter, locationNameParameter);
        }
    
        public virtual int PSetLocationMove(Nullable<int> rootId, Nullable<int> nodeToMove, Nullable<int> newParentNode)
        {
            var rootIdParameter = rootId.HasValue ?
                new ObjectParameter("rootId", rootId) :
                new ObjectParameter("rootId", typeof(int));
    
            var nodeToMoveParameter = nodeToMove.HasValue ?
                new ObjectParameter("nodeToMove", nodeToMove) :
                new ObjectParameter("nodeToMove", typeof(int));
    
            var newParentNodeParameter = newParentNode.HasValue ?
                new ObjectParameter("newParentNode", newParentNode) :
                new ObjectParameter("newParentNode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSetLocationMove", rootIdParameter, nodeToMoveParameter, newParentNodeParameter);
        }
    
        public virtual int PSetRemoveLocationByLvl(Nullable<int> currentRoot, Nullable<int> lvlToRemove)
        {
            var currentRootParameter = currentRoot.HasValue ?
                new ObjectParameter("CurrentRoot", currentRoot) :
                new ObjectParameter("CurrentRoot", typeof(int));
    
            var lvlToRemoveParameter = lvlToRemove.HasValue ?
                new ObjectParameter("LvlToRemove", lvlToRemove) :
                new ObjectParameter("LvlToRemove", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSetRemoveLocationByLvl", currentRootParameter, lvlToRemoveParameter);
        }
    
        [DbFunction("ChannakyaBaseEntities", "FGetCustName")]
        public virtual IQueryable<FGetCustName_Result> FGetCustName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FGetCustName_Result>("[ChannakyaBaseEntities].[FGetCustName]()");
        }
    }
}
